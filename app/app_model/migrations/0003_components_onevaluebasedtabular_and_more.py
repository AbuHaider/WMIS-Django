# Generated by Django 5.2.1 on 2025-05-29 12:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app_model', '0002_paramaplegend'),
    ]

    operations = [
        migrations.CreateModel(
            name='Components',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('component_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'lkp_component',
                'ordering': ['-created_at'],
            },
        ),
        # migrations.CreateModel(
        #     name='OneValueBasedTabular',
        #     fields=[
        #         ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Id')),
        #         ('category_id', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
        #         ('category_name', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
        #         ('para_name', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
        #         ('description', models.CharField(blank=True, max_length=256, verbose_name='Description')),
        #         ('value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Exposure')),
        #         ('sorting', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Order')),
        #         ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
        #         ('updated_at', models.DateTimeField(auto_now=True, null=True)),
        #     ],
        #     options={
        #         'db_table': 'tbl_one_value_tabular_data',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='ParaWiseEducationInfo',
        #     fields=[
        #         ('id', models.AutoField(primary_key=True, serialize=False)),
        #         ('para_name', models.CharField(blank=True, max_length=256)),
        #         ('description', models.CharField(blank=True, max_length=256)),
        #         ('institution_number', models.CharField(blank=True, max_length=100, null=True)),
        #         ('average_distance', models.CharField(blank=True, max_length=100, null=True)),
        #         ('average_time', models.CharField(blank=True, max_length=100, null=True)),
        #         ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
        #         ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
        #         ('updated_at', models.DateTimeField(auto_now=True, null=True)),
        #     ],
        #     options={
        #         'db_table': 'tbl_education_info',
        #         'ordering': ['sorting'],
        #     },
        # ),
        # migrations.CreateModel(
        #     name='ParaWiseLayerInfo',
        #     fields=[
        #         ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Id')),
        #         ('category_id', models.CharField(max_length=200, verbose_name='Category Id')),
        #         ('category_name', models.CharField(blank=True, max_length=256, verbose_name='Category Name')),
        #         ('para_name', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
        #         ('description', models.CharField(blank=True, max_length=256, verbose_name='Description')),
        #         ('chakma', models.CharField(blank=True, max_length=100, null=True, verbose_name='chakma')),
        #         ('marma', models.CharField(blank=True, max_length=100, null=True, verbose_name='marma')),
        #         ('tripura', models.CharField(blank=True, max_length=100, null=True, verbose_name='tripura')),
        #         ('cmnt_mro', models.CharField(blank=True, max_length=100, null=True, verbose_name='mro')),
        #         ('tanchangya', models.CharField(blank=True, max_length=100, null=True, verbose_name='tanchangya')),
        #         ('bawm', models.CharField(blank=True, max_length=100, null=True, verbose_name='bawm')),
        #         ('chak', models.CharField(blank=True, max_length=100, null=True, verbose_name='chak')),
        #         ('khyang', models.CharField(blank=True, max_length=100, null=True, verbose_name='khyang')),
        #         ('khumi', models.CharField(blank=True, max_length=100, null=True, verbose_name='khumi')),
        #         ('lushai', models.CharField(blank=True, max_length=100, null=True, verbose_name='lushai')),
        #         ('pankhua', models.CharField(blank=True, max_length=100, null=True, verbose_name='pankhua')),
        #         ('non_ips', models.CharField(blank=True, max_length=100, null=True, verbose_name='non_ips')),
        #         ('manipuri', models.CharField(blank=True, max_length=100, null=True)),
        #         ('total', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total')),
        #         ('sorting', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Order')),
        #         ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
        #         ('updated_at', models.DateTimeField(auto_now=True, null=True)),
        #     ],
        #     options={
        #         'verbose_name_plural': 'Para Wise Layer Info',
        #         'db_table': 'tbl_para_wise_layer_info_new',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='ParaWiseLiteracyInfo',
        #     fields=[
        #         ('id', models.AutoField(primary_key=True, serialize=False)),
        #         ('para_name', models.CharField(blank=True, max_length=256)),
        #         ('description', models.CharField(blank=True, max_length=256)),
        #         ('male', models.CharField(blank=True, max_length=100, null=True)),
        #         ('female', models.CharField(blank=True, max_length=100, null=True)),
        #         ('total', models.CharField(blank=True, max_length=100, null=True)),
        #         ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
        #         ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
        #         ('updated_at', models.DateTimeField(auto_now=True, null=True)),
        #     ],
        #     options={
        #         'db_table': 'tbl_literacy_info',
        #         'ordering': ['sorting'],
        #     },
        # ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'lkp_unit',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Indicators',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator', to='app_model.components')),
            ],
            options={
                'db_table': 'lkp_indicator',
                'ordering': ['-created_at'],
            },
        ),
        # migrations.CreateModel(
        #     name='LayerMapColor',
        #     fields=[
        #         ('id', models.AutoField(primary_key=True, serialize=False)),
        #         ('category_id', models.CharField(max_length=50)),
        #         ('category_name', models.CharField(blank=True, max_length=200, null=True)),
        #         ('para_name', models.CharField(blank=True, max_length=200, null=True)),
        #         ('actual_value', models.CharField(blank=True, max_length=200, null=True)),
        #         ('legend_value', models.CharField(blank=True, max_length=256, null=True)),
        #         ('layer_color', models.CharField(blank=True, max_length=200, null=True)),
        #         ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
        #         ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
        #         ('updated_at', models.DateTimeField(auto_now=True, null=True)),
        #         ('watershed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app_model.watershed', verbose_name='watershed Name')),
        #     ],
        #     options={
        #         'db_table': 'tbl_layer_map_color',
        #     },
        # ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('indicator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter', to='app_model.indicators')),
            ],
            options={
                'db_table': 'lkp_parameter',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClimateResilience',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baseline_2024', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2030', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2035', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2041', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2050', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_special', models.BooleanField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('watershed', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='climate_resilience', to='app_model.watershed')),
                ('parameter', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='climate_resilience', to='app_model.parameters')),
            ],
            options={
                'db_table': 'tbl_climate_resilience',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WatershedHealth',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baseline_2024', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2030', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2035', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2041', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2050', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_special', models.BooleanField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('parameter', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watershed_health', to='app_model.parameters')),
                ('watershed', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watershed_health', to='app_model.watershed')),
            ],
            options={
                'db_table': 'tbl_watershed_health',
                'ordering': ['-created_at'],
            },
        ),
    ]
