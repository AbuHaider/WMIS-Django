# Generated by Django 4.2.10 on 2025-06-03 01:37

import app_model.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Components',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('component_name', models.CharField(blank=True, max_length=250, null=True)),
                ('monitoring_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'lkp_component',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('dist_geo_code', models.CharField(max_length=4)),
                ('dist_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('dist_name_bng', models.CharField(max_length=200)),
                ('sorting_order', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lkp_district',
                'ordering': ['dist_name'],
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('div_geo_code', models.CharField(max_length=2)),
                ('div_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('div_name_bng', models.CharField(max_length=200)),
                ('sorting_order', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lkp_division',
                'ordering': ['div_name'],
            },
        ),
        migrations.CreateModel(
            name='Indicators',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('indicator_name', models.CharField(blank=True, max_length=250, null=True)),
                ('monitoring_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('component', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator', to='app_model.components')),
            ],
            options={
                'db_table': 'lkp_indicator',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MapLegend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.CharField(max_length=50)),
                ('category_name', models.CharField(blank=True, max_length=200, null=True)),
                ('display_header', models.CharField(blank=True, max_length=200, null=True)),
                ('legend_color', models.CharField(blank=True, max_length=200, null=True)),
                ('legend_value', models.CharField(blank=True, max_length=256, null=True)),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('watershed_id', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'tbl_map_legend',
            },
        ),
        migrations.CreateModel(
            name='MapShapeFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.CharField(blank=True, max_length=100, null=True)),
                ('category_name', models.CharField(blank=True, max_length=250, null=True)),
                ('file_path', models.FileField(blank=True, null=True, upload_to=app_model.models.map_files_path)),
                ('is_active', models.BooleanField(default=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'tbl_map_files',
            },
        ),
        migrations.CreateModel(
            name='OneValueBasedTabular',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Id')),
                ('category_id', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
                ('category_name', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
                ('para_name', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
                ('description', models.CharField(blank=True, max_length=256, verbose_name='Description')),
                ('value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Exposure')),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'tbl_one_value_tabular_data',
            },
        ),
        migrations.CreateModel(
            name='ParaMapLegend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('watershed_id', models.CharField(max_length=100)),
                ('legend_title', models.CharField(blank=True, max_length=100, null=True)),
                ('para_name', models.CharField(blank=True, max_length=100, null=True)),
                ('legend_color', models.CharField(blank=True, max_length=50, null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_para_map_legend',
            },
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_name', models.CharField(blank=True, max_length=250, null=True)),
                ('monitoring_type', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('indicator', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter', to='app_model.indicators')),
            ],
            options={
                'db_table': 'lkp_parameter',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParaWiseEducationInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('para_name', models.CharField(blank=True, max_length=256)),
                ('description', models.CharField(blank=True, max_length=256)),
                ('institution_number', models.CharField(blank=True, max_length=100, null=True)),
                ('average_distance', models.CharField(blank=True, max_length=100, null=True)),
                ('average_time', models.CharField(blank=True, max_length=100, null=True)),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'tbl_education_info',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='ParaWiseLayerInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Id')),
                ('category_id', models.CharField(max_length=200, verbose_name='Category Id')),
                ('category_name', models.CharField(blank=True, max_length=256, verbose_name='Category Name')),
                ('para_name', models.CharField(blank=True, max_length=256, verbose_name='Para Name')),
                ('description', models.CharField(blank=True, max_length=256, verbose_name='Description')),
                ('chakma', models.CharField(blank=True, max_length=100, null=True, verbose_name='chakma')),
                ('marma', models.CharField(blank=True, max_length=100, null=True, verbose_name='marma')),
                ('tripura', models.CharField(blank=True, max_length=100, null=True, verbose_name='tripura')),
                ('cmnt_mro', models.CharField(blank=True, max_length=100, null=True, verbose_name='mro')),
                ('tanchangya', models.CharField(blank=True, max_length=100, null=True, verbose_name='tanchangya')),
                ('bawm', models.CharField(blank=True, max_length=100, null=True, verbose_name='bawm')),
                ('chak', models.CharField(blank=True, max_length=100, null=True, verbose_name='chak')),
                ('khyang', models.CharField(blank=True, max_length=100, null=True, verbose_name='khyang')),
                ('khumi', models.CharField(blank=True, max_length=100, null=True, verbose_name='khumi')),
                ('lushai', models.CharField(blank=True, max_length=100, null=True, verbose_name='lushai')),
                ('pankhua', models.CharField(blank=True, max_length=100, null=True, verbose_name='pankhua')),
                ('non_ips', models.CharField(blank=True, max_length=100, null=True, verbose_name='non_ips')),
                ('manipuri', models.CharField(blank=True, max_length=100, null=True)),
                ('total', models.CharField(blank=True, max_length=100, null=True, verbose_name='Total')),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Para Wise Layer Info',
                'db_table': 'tbl_para_wise_layer_info_new',
            },
        ),
        migrations.CreateModel(
            name='ParaWiseLiteracyInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('para_name', models.CharField(blank=True, max_length=256)),
                ('description', models.CharField(blank=True, max_length=256)),
                ('male', models.CharField(blank=True, max_length=100, null=True)),
                ('female', models.CharField(blank=True, max_length=100, null=True)),
                ('total', models.CharField(blank=True, max_length=100, null=True)),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'tbl_literacy_info',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='Units',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_name', models.CharField(blank=True, max_length=250, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'lkp_unit',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Watershed',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('watershed_code', models.CharField(max_length=8, unique=True)),
                ('watershed_name', models.CharField(max_length=200)),
                ('watershed_name_bng', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('district', models.ForeignKey(db_column='district_name', null=True, on_delete=django.db.models.deletion.PROTECT, to='app_model.district')),
            ],
            options={
                'db_table': 'lkp_watershed',
                'ordering': ['watershed_code'],
            },
        ),
        migrations.CreateModel(
            name='WatershedHealth',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baseline_2024', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2030', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2035', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2041', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2050', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_special', models.BooleanField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('parameter', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watershed_health', to='app_model.parameters')),
                ('watershed', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='watershed_health', to='app_model.watershed')),
            ],
            options={
                'db_table': 'tbl_watershed_health',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50)),
                ('user_category', models.CharField(blank=True, default='pending', max_length=50, null=True)),
                ('user_role', models.CharField(blank=True, default='pending', max_length=100, null=True)),
                ('user_status', models.CharField(blank=True, default='pending', max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_user_details',
            },
        ),
        migrations.CreateModel(
            name='LayerMapColor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category_id', models.CharField(max_length=50)),
                ('category_name', models.CharField(blank=True, max_length=200, null=True)),
                ('para_name', models.CharField(blank=True, max_length=200, null=True)),
                ('actual_value', models.CharField(blank=True, max_length=200, null=True)),
                ('legend_value', models.CharField(blank=True, max_length=256, null=True)),
                ('layer_color', models.CharField(blank=True, max_length=200, null=True)),
                ('sorting', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('watershed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app_model.watershed', verbose_name='watershed Name')),
            ],
            options={
                'db_table': 'tbl_layer_map_color',
            },
        ),
        migrations.AddField(
            model_name='district',
            name='division',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='app_model.division'),
        ),
        migrations.CreateModel(
            name='ClimateResilience',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('baseline_2024', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2030', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2035', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2041', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('target_2050', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_special', models.BooleanField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('parameter', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='climate_resilience', to='app_model.parameters')),
                ('watershed', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='climate_resilience', to='app_model.watershed')),
            ],
            options={
                'db_table': 'tbl_climate_resilience',
                'ordering': ['-created_at'],
            },
        ),
    ]
